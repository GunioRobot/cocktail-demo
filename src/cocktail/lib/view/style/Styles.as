package cocktail.lib.view.style{	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;		/**	 * Styles (multiple) manager.	 * @author nybras | nybras@codeine.it	 */	public class Styles 	{		/* ----------------------------------------------------------------------			VARS		---------------------------------------------------------------------- */				private var _loading : Boolean;		private var _loader : URLLoader;		private	var _styles : *;								/* ----------------------------------------------------------------------			INITIALIZING		---------------------------------------------------------------------- */				/**		 * Styles manager.		 * @param url	Url to be loaded.		 */		public function Styles ( url : String = null ) : void		{			_styles = {};			load ( url );		}								/* ----------------------------------------------------------------------			DESTROYING		---------------------------------------------------------------------- */				/**		 * Destroys all styles, even if its still loading.		 */		public function destroy () : void		{			if ( _loading )			{				_loader.close();				_loader.removeEventListener( Event.COMPLETE, cache );								_loading = false;			}				_styles = null;		}								/* ----------------------------------------------------------------------			STYLES SEARCH		---------------------------------------------------------------------- */				/**		 * Search by the given style name.		 * @return	The found style.		 */		public function get style ( name : String ) : Style		{			return _styles[ name ];		}								/* ----------------------------------------------------------------------			VARS		---------------------------------------------------------------------- */				/**		 * Load the given style url.		 * @param url	Url to be loaded.		 */		public function load ( url : String ) : void		{			_loading = true;			_loader = new URLLoader();			_loader.addEventListener( Event.COMPLETE, cache );			_loader.load( new URLRequest( url ) );		}				/**		 * Cached all styles parsed into objects.		 * @param event	Event.COMPLETE.		 */		private function cache ( event : Event ) : void		{			var raw : *;			var style : String;						raw = FssStyle.parse ( URLLoader( event.target ).data );			for ( style in raw )				_styles[ style ] = raw[ style ];						destroy();		}			}}