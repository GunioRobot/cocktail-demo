package cocktail.lib {	import cocktail.core.Index;	import cocktail.core.connectors.RequestConnector;	import cocktail.core.connectors.request.RequestKeeper;		/**	 * Some tweaks for Model and View.	 * @author nybras | nybras@codeine.it	 */	public class Tweaks extends Index 	{		/* ---------------------------------------------------------------------			VARS		--------------------------------------------------------------------- */				private var _queue : RequestConnector;		private var _queueing : Boolean;								/* ---------------------------------------------------------------------			URL REQUESTS		--------------------------------------------------------------------- */				/**		 * Open or close a queue and return it.		 * @param opening	if <code>true</code> open a new queue, otherwise		 * <code>false</code> close the opened queue.		 * @return	The opened or closed queue.		 */		protected function queue ( opening : Boolean ) : RequestConnector		{			if ( _queueing = opening ) {				_queue = new RequestConnector( );			}						return _queue;		}				/**		 * Request the given url through the queue (if openen) or directly (if		 * closed).		 * 		 * @param url	The url adress to be requested.		 * @param autoLoad	If <code>true</code>, loading process starts		 * automatically.		 */		protected function url ( url : String, autoLoad : Boolean = true ) : RequestKeeper		{			if ( this._queueing )				return this._queue.load( url, autoLoad );			else				return new RequestConnector().load( url, autoLoad );		}	}}